{"./":{"url":"./","title":"简介","keywords":"","body":"GitBook 测试 Term 、 业务项目 、 Student、Teacher、Another term GitBook 是一个基于 Node.js 的命令行工具，可使用 Github/Git 和 Markdown 来制作精美的电子书。 支持输出以下几种文档格式: 静态站点：GitBook 默认输出该种格式 PDF：需要安装 gitbook-pdf 依赖 eBook：需要安装 ebook-convert Markdown 有关教程，请移步 Markdown RC:VCInvite: InviteMessage RC:VCRinging: RingingMessage RC:VCAccept: AcceptMessage RC:VCHangup: HungupMessage RC:VCModifyMedia: MediaModifyMessage RC:VCModifyMem: MemberModifyMessage sequenceDiagram Alice->>Bob: Hello Bob, how are you?Hello Bob, how are you? alt is sick Bob->>Alice: Not so good :( else is well Bob->>Alice: Feeling fresh like a daisy end opt Extra response Bob->>Alice: Thanks for asking end 该吃饭了 颜色列表: http://www.w3school.com.cn/cssref/css_colors.asp "},"depend.html":{"url":"depend.html","title":"环境配置","keywords":"","body":"环境配置 Node GitBook 依赖 Node , 请按各自平台下载 Node 版本 (4.0.0+) 安装成功后，请在命令行执行 node -v 检测是否成功, 输出 v4.0.0 表示成功（4.0.0 为示意，版本号以安装为主） GitBook 以下步骤请在命令行中执行: 1、安装 npm install gitbook-cli -g 2、检测 gitbook -V 输出版本号即为成功 截止到这里，GitBook 环境已经配置完成, 开始在 GitBook 中畅游吧 1、详细说明 2、快速开始 "},"web_calllib.html":{"url":"web_calllib.html","title":"音视频","keywords":"","body":"Web CallLib 开发指南 环境准备 操作系统 Windows: Windows 7+ Mac: 10.12.6+ 浏览器 Chrome: Chrome 58+ Safari Safari 11+ 注意: 站点必须是 HTTPS 或使用本地使用 127.0.0.1 调试 集成流程 1、开通音视频服务，请参考 音视频开通指南 2、引入 Web SDK，请参考 Web 开发指南 3、引入 Web CallLib ，请参考 音视频示例 4、使用 Web SDK 连接融云服务器，可参考 示例 5、发起音视频通话 通话流程 User A 与 User B 通话图解 1、User A 发起通话，向 User B 发送 InviteMessage 2、User B 开始响铃， 并向 User A 发送 RingingMessage，通知 User A 响铃 3、User B 发送 AcceptMessage 至 User A 建立通话 4、User A 与 User B 均可主动切换音频、视频通话 5、User A 与 User B 均可主动邀请人加入通话 6、User A 与 User B 均可主动邀请人加入通话 7、User A 与 User B 均可主动挂断通话 8、通话结束 消息类型 InviteMessage 通话发起方，发送 InviteMessage 给接收方，发起方等待接通，接收方此时响铃、等待接听 ObjectName: RC:VCInvite 属性名 类型 说明　 callId string 房间 Id engineType number 视频引擎 mediaType number 通话类型 inviteUserIds array 被邀请人 Id 列表 extra string 附加信息 RingingMessage 通话发起方发送 InviteMessage 后，会收到接收方 RingingMessage, 用来提示发起方响铃 ObjectName: RC:VCRinging 属性名 类型 说明　 callId string 房间 Id AcceptMessage 接收方同意通话邀请，发送 AcceptMessage ObjectName: RC:VCAccept 属性名 类型 说明 callId string 房间 Id mediaType number 通话类型 MemberModifyMessage 音视频通话时邀请其他人加入通话，发送 MemberModifyMessage ObjectName: RC:VCModifyMem 属性名 类型 说明 callId string 房间 Id caller string 邀请人 engineType number 音视频引擎类型 existedUserPofiles array 通话内已存在的成员列表 inviteUserIds array 被邀请人的列表 mediaType number 通话类型 MediaModifyMessage 音视频通话切换需要发 MediaModifyMessage 告知通话中的其他成员 ObjectName: RC:VCModifyMedia 属性名 类型 说明 callId string 发起人 Id mediaType number 通话类型 SummaryMessage 通话结束后收到 SummaryMessage ，此时可根据消息属性显示通话结束后的小灰条消息 ObjectName: RC:VCSummary 属性名 类型 说明 caller string 发起人 inviter string 被邀请人 mediaType number 通话类型 memberIdList array 成员列表 startTime number 通话开始时间 duration number 通话时长(s) status number 通话状态 枚举、对象 通话类型 音频: 1 视频: 2 Status 发起方取消已发出的通话请求: 1 发起方拒绝收到的通话请求: 2 发起方挂断: 3 发起方忙碌: 4 发起方未接听: 5 发起方不支持当前引擎: 6 发起方网络出错: 7 接收方取消已发出的通话请求: 11 接收方拒绝收到的通话请求: 12 通话过程接收方挂断: 13 接收方忙碌: 14 接收方未接听: 15 接收方不支持当前引擎: 16 接收方网络错误: 17 分辨率说明 视频属性 分辨率（ 宽 x 高 ） 帧率 码率(Kbps) 240P 320X240 15 200 360P 640X360 15 400 480P 640x480 15 500 720P 1280x720 15 1130 "},"plan.html":{"url":"plan.html","title":"计划","keywords":"","body":"计划 计划列表 计划 优先级 状态 开始时间 结束时间 小程序 SDK 优化 高 进行中 —— —— WebSDK 优化 高 未开始 —— —— Web 下载模块 高 进行中 —— —— Emoji 知识库 高 进行中 —— —— CallLib 高 未开始 —— —— SDK API 示例 高 未开始 —— —— SDK 工程示例 高 未开始 —— —— SDK 文档 + 示例 高 未开始 —— —— 桌面版（网络监控） 中 未开始 —— —— WebSDK 3.0 规划 中 进行中 —— —— 备注: 小程序 SDK 优化: 清理代码、压缩后体积控制在 100KB 以内 WebSDK 优化: 收发件箱时间戳分离、本地存储优化 "},"tpl.html":{"url":"tpl.html","title":"TRL","keywords":"","body":"ChatroomBarrage 聊天室弹幕消息， 属性 类型 描述 content string 弹幕内容 senderName string 发送弹幕的用户名称 senderPortrait string 发送弹幕的用户头像 ChatroomGift 可根据此类型消息发送各种礼物至聊天室 属性 类型 描述 id string 礼物编号 number int 本次发送礼物数量 total int 在本聊天室当前用户总共发送了多少个该中礼物 ChatroomStart 聊天开始前，发送倒计时通知 属性 类型 描述 time string 聊天时开始时间点的毫秒数 ChatroomEnd 聊天结束后，发送结束通知 属性 类型 描述 duration int 本次直播持续时长，单位: 秒 ChatroomWelcome 欢迎用户进入聊天室 属性 类型 描述 id string 用户 Id name string 用户名称 portrait string 用户头像 ChatroomFollow 用户关注主播后，发送此消息 属性 类型 描述 id string 用户 Id name string 用户名称 portrait string 用户头像 ChatroomAddminAdd 用户被设置为管理时，发送此消息 属性 类型 描述 id string 用户 Id name string 用户名称 portrait string 用户头像 ChatroomAddminRemove 管理员被移除权限时，发送此消息 属性 类型 描述 id string 管理员 Id name string 管理员名称 portrait string 管理员头像 ChatroomUserBlock 用户被封禁通知消息 属性 类型 描述 id string 被封禁的用户 Id duration int 封禁时长，单位: 秒 ChatroomUserUnBlock 用户被解除封通知消息 属性 类型 描述 id string 用户 Id ChatroomUserQuit 用户离开聊天室通知消息 属性 类型 描述 id string 用户 Id ChatroomUserBan 用户被禁言通知消息 属性 类型 描述 id string 用户 Id ChatroomUserUnBan 用户被取消禁言通知消息 属性 类型 描述 id string 用户 Id ChatroomSummary 在线人数通知消息 属性 类型 描述 online int 在线人数 ChatroomLike 属性 类型 描述 count int 点赞的次数 "},"detail/detail.html":{"url":"detail/detail.html","title":"详细说明","keywords":"","body":"详细说明 1、目录结构 2、命令 3、编辑器 "},"detail/structure.html":{"url":"detail/structure.html","title":"目录结构","keywords":"","body":"目录结构 SUMMARY.md 和 README.md 是 GitBook 项目中必须存在的两个文件，具体如下: book/ ├── README.md ├── SUMMARY.md ├── chapter-1/ ├ ├── README.md ├ └── something.md ├── structure.md └── .... SUMMARY.md SUMMARY.md 是左侧导航栏的目录结构, 用来生成目录树, 例如: # Summary * [简介](README.md) * [目录结构](structure.md) README.md README.md 是项目的入口，默认打开页面，可对当前文档项目做简要说明、注意事项等等 其他 structure.md 是自定义文档说明, 使用中可按业务逻辑、模型，不同模块划分不同目录，例如 chapter-1 ，最终在 SUMMARY.md 暴露即可 "},"detail/editor.html":{"url":"detail/editor.html","title":"编辑器","keywords":"","body":"编辑器 GitBook 的编辑器非常广泛，但凡可以编辑 Markdown 的工具都可以，没有具体的限制 推荐几种: 1、Typora 、GitBook-Editor 或 MarkdownPad 2、Sublime 或 Atom "},"detail/command.html":{"url":"detail/command.html","title":"命令","keywords":"","body":"命令 gitbook-cli 是 GitBook 的命令行工具，gitbook-cli 和 gitbook 是两个软件, gitbook-cli 会将下载的 gitbook 的不同版本放到 用户/.gitbook 目录下 查看所有命令 gitbook help => Usage: gitbook [options] [command] Commands: ls List versions installed locally current Display currently activated version ls-remote List remote versions available for install fetch [version] Download and install a alias [folder] [version] Set an alias named pointing to uninstall [version] Uninstall a version update [tag] Update to the latest version of GitBook help List commands for GitBook * run a command with a specific gitbook version Options: -h, --help output usage information -v, --gitbook [version] specify GitBook version to use -d, --debug enable verbose error -V, --version Display running versions of gitbook and gitbook-cli 初始化 gitbook init 1、创建 book 目录 2、进入 book 目录执行 gitbook init 后会自动生成 SUMMARY.md 和 README.md 编译 gitbook build 将 book 目录中所有 Markdown 编译成 HTML 页面 编译并启动服务 gitbook serve 将 book 目录中所有 Markdown 编译成 HTML 页面并启动一个端口为 4000 的本地服务 支持实时预览 http://localhost:4000 修改端口: gitbook serve --port 端口 安装插件 gitbook install 在 book.json 中配置插件后执行此命令进行安装 列出本地所有版本 gitbook ls 列出远程所有版本 gitbook ls-remote 安装远程版本 gitbook fetch fetch 包含下载和安装 更新到最新版本 gitbook update "},"quick-start.html":{"url":"quick-start.html","title":"快速开始","keywords":"","body":"快速开始 开始前请在 quick-start（ 项目目录 ）打开命令行窗口: Mac、Windows 1、安装 Node Node 版本 (4.0.0+) 2、安装 gitbook-cli npm install gitbook-cli -g 3、创建项目 创建 quick-start 目录或下载 示例 在 quick-start 目录中执行 gitbook init 4、预览 在 quick-start 目录中 gitbook serve 访问 http://localhost:4000 "},"plugin.html":{"url":"plugin.html","title":"插件","keywords":"","body":"插件 GitBook 插件目前有 700 多个，可在 插件库 按需寻找 以下列出常用的几个插件： 搜索插件: search 流程图: mermaid 代码高亮: prism JSFiddle: JSFiddle 折叠目录: toggle-chapters "},"GLOSSARY.html":{"url":"GLOSSARY.html","keywords":"","body":"业务项目 123 Student Teacher Another term With it's definition, this can contain bold text and all other kinds of inline markup ... Term Definition for this term "}}